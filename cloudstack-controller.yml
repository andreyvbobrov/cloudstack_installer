---
- hosts: all
  become: true
  tasks:
  - name: Add Cloudstack Repo
    yum_repository:
      name: cloudstack
      description: Cloudstack Repo
      baseurl: http://download.cloudstack.org/centos7/4.11/
      gpgcheck: no
  - name: upgrade all packages
    yum:
      name: '*'
      state: latest 
  - name: Install epel-relese
    yum:
      name: epel-release
      state: latest
  - name: Install mysql-connector-python
    yum:
      name: mysql-connector-python
      state: latest
  - name: Install a list of packages
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - cloudstack-management
      - cloudstack-usage
      - cloudstack-mysql-ha
      - mariadb-server
      - mariadb
      - keepalived
      - haproxy
      - MySQL-python

- hosts: first-controller
  become: true
  tasks:
  - name: Copy my.cnf for First controller Cloudstack
    copy:
      src: templates/first_controller.my.cnf
      dest: /etc/my.cnf

- hosts: second-controller
  become: true
  tasks:
  - name: Copy my.cnf for Second controller Cloudstack
    copy:
      src: templates/second_controller.my.cnf
      dest: /etc/my.cnf

- hosts: all
  become: true
  tasks:
  - name: start mysql service
    service:
      name: mariadb
      state: started
      enabled: yes
  - name: update mysql root password
    mysql_user:
      user: "root"
      password: "{{ mysql_root_password }}"
      host: "localhost"
      login_user: "root"
      login_password: ""
    ignore_errors: true
  - name: add mysql user replication and grant access with REPLICATION SLAVE rights
    mysql_user:
      user: "replication"
      password: "{{ replication_password }}"
      priv: "*.*:REPLICATION SLAVE"
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
      state: present
  - name: add mysql user cloud
    mysql_user:
      user: "cloud"
      password: "{{ cloud_password }}"
      priv: '*.*:ALL,GRANT'
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
      state: present
  - name: Stop slave on all nodes
    mysql_replication:
      mode: stopslave
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
  vars:
    mysql_root_password: Cl0ud5tack
    replication_password: Cl0ud5tack
    cloud_password: secret

- hosts: first-controller
  become: true
  tasks:
  - name: change master to second controller
    mysql_replication:
      mode: changemaster
      master_host: "{{ mysql_replication_slave }}"
      master_user: "replication"
      master_password: "{{ replication_password }}"
      master_log_file: mysql-bin.000001
      master_log_pos: 245
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
  - name: start slave on first controller
    mysql_replication:
      mode: startslave
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
  vars:
    mysql_root_password: Cl0ud5tack
    replication_password: Cl0ud5tack
    mysql_replication_slave: 172.28.128.5

- hosts: second-controller
  become: true
  tasks:
  - name: change master to first controller
    mysql_replication:
      mode: changemaster
      master_host: "{{ mysql_replication_master }}"
      master_user: "replication"
      master_password: "{{ replication_password }}"
      master_log_file: mysql-bin.000001
      master_log_pos: 245
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
  - name: start slave on second controller
    mysql_replication:
      mode: startslave
      login_user: "root"
      login_password: "{{ mysql_root_password }}"
  vars:
    mysql_root_password: Cl0ud5tack
    replication_password: Cl0ud5tack
    mysql_replication_master: 172.28.128.6